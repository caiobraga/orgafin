[{"C:\\xampp\\htdocs\\orgafin-master2\\src\\App.js":"1","C:\\xampp\\htdocs\\orgafin-master2\\src\\App.test.js":"2","C:\\xampp\\htdocs\\orgafin-master2\\src\\Components\\Moeda.js":"3","C:\\xampp\\htdocs\\orgafin-master2\\src\\Components\\Navbar.js":"4","C:\\xampp\\htdocs\\orgafin-master2\\src\\Components\\SIde_NavBar.js":"5","C:\\xampp\\htdocs\\orgafin-master2\\src\\Components\\Side_NavBar_Login.js":"6","C:\\xampp\\htdocs\\orgafin-master2\\src\\index.js":"7","C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\Categorias.js":"8","C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\Home.js":"9","C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\Login.js":"10","C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\Movimentacao.js":"11","C:\\xampp\\htdocs\\orgafin-master2\\src\\reportWebVitals.js":"12","C:\\xampp\\htdocs\\orgafin-master2\\src\\routes.js":"13","C:\\xampp\\htdocs\\orgafin-master2\\src\\setupTests.js":"14","C:\\xampp\\htdocs\\orgafin-master2\\src\\tools\\functions.js":"15","C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\configFetch\\index.js":"16"},{"size":120,"mtime":1606253573000,"results":"17","hashOfConfig":"18"},{"size":246,"mtime":1606253573000,"results":"19","hashOfConfig":"18"},{"size":190,"mtime":1606253573000,"results":"20","hashOfConfig":"18"},{"size":860,"mtime":1606253573000,"results":"21","hashOfConfig":"18"},{"size":1595,"mtime":1607651158528,"results":"22","hashOfConfig":"18"},{"size":4225,"mtime":1607362283182,"results":"23","hashOfConfig":"18"},{"size":500,"mtime":1606253573000,"results":"24","hashOfConfig":"18"},{"size":12432,"mtime":1607646452774,"results":"25","hashOfConfig":"18"},{"size":7693,"mtime":1607711533275,"results":"26","hashOfConfig":"18"},{"size":4927,"mtime":1607443118664,"results":"27","hashOfConfig":"18"},{"size":17816,"mtime":1607716325641,"results":"28","hashOfConfig":"18"},{"size":362,"mtime":1606253573000,"results":"29","hashOfConfig":"18"},{"size":663,"mtime":1606253573000,"results":"30","hashOfConfig":"18"},{"size":241,"mtime":1606253573000,"results":"31","hashOfConfig":"18"},{"size":2083,"mtime":1606253573000,"results":"32","hashOfConfig":"18"},{"size":78,"mtime":1607362153589,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nmk2d5",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\orgafin-master2\\src\\App.js",[],"C:\\xampp\\htdocs\\orgafin-master2\\src\\App.test.js",[],"C:\\xampp\\htdocs\\orgafin-master2\\src\\Components\\Moeda.js",[],"C:\\xampp\\htdocs\\orgafin-master2\\src\\Components\\Navbar.js",["72","73","74","75"],"import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\n\nfunction NavBar(props) {\n\n    const history = useHistory();\n\n    return (\n\n        <div class=\"navbar-fixed\" >\n            <nav class=\"nav-extended blue darken-4\" >\n                <div className=\"navbar-fixed\" >\n                    <nav className=\"nav-extended blue darken-4\" >\n                        <div className=\"nav-wrapper\"  >\n                        <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n                            <a className=\"brand-logo blue darken-4 center\" onClick={() => history.push(\"/home\")}>Orgafin</a>\n                        </div>\n                    </nav>\n                </div>\n\n            </nav>\n\n        </div>\n    );\n\n\n\n\n}\n\nexport default NavBar;","C:\\xampp\\htdocs\\orgafin-master2\\src\\Components\\SIde_NavBar.js",["76","77","78","79","80","81","82","83"],"import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nfunction Sidenav(props) {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        var elems = document.querySelectorAll('.sidenav');\n        M.Sidenav.init(elems, {});\n    })\n\n    return (\n        <>\n            <ul id=\"slide-out\" class=\"sidenav sidenav-fixed\">\n                <li>\n                    <div class=\"user-view blue darken-4\">\n                        <div class=\"background\">\n                        </div>\n                        <a href=\"\" ><img class=\"circle\" src={\"https://ipc.digital/wp-content/uploads/2016/07/icon-user-default.png\"} width=\"200px\" /></a>\n                        <a href=\"\"><span class=\"white-text name\"></span></a>\n                        <a href=\"\"><span class=\"white-text email\">{localStorage.getItem(\"email\")}</span></a>\n                    </div>\n                </li>\n\n                <li><a onClick={() => history.push('./home')}><i class=\"material-icons\">dashboard</i>Painel</a></li>\n\n                <li><a  onClick={() => history.push('./movimentacao')}><i class=\"material-icons\">receipt</i>movimentação</a></li>\n                <li><a onClick={() => history.push('./categorias')} ><i class=\"material-icons\">sticky_note_2</i>Categorias</a></li>\n\n                <li><div class=\"divider\"></div></li>\n                <li><a onClick={() => { localStorage.clear(); return history.push(\"/\") }} ><i class=\"material-icons\">power_settings_new</i>Sair</a></li>\n\n            </ul>\n        </>\n    )\n}\nexport default Sidenav;","C:\\xampp\\htdocs\\orgafin-master2\\src\\Components\\Side_NavBar_Login.js",["84","85","86","87","88","89","90","91","92"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\nimport src from '../pages/configFetch/index.js'\nfunction SidenavLogin(props) {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const history = useHistory();\n\n    useEffect(() => {\n            var elems = document.querySelectorAll('.sidenav');\n            M.Sidenav.init(elems, {});\n    })\n\n\n    async function create_account(){\n        if(email == \"\") return M.toast({html: 'Preencha o email'})\n        if(password == \"\") return M.toast({html: 'Preencha a senha'})\n       return  cadastrar();\n        \n       \n    }\n    \n    async function cadastrar(){\n   \n        fetch(src+\"/usuarios/cadastrar/\", {\n            method: \"POST\",\n            body: JSON.stringify({ \"email\": email, \"senha\":password })\n          })\n            .then(response => console.log(response.json))\n            .then(data =>  M.toast({html: 'Cadastro realizado'})\n         );\n    \n    }\n\n    return (\n    <>\n        <ul id=\"slide-out\" class=\"sidenav sidenav-fixed\">\n            <li>\n                <div class=\"user-view blue darken-4\">\n                    <div class=\"background\">\n                    </div>\n                    <a href=\"\" ><img class=\"circle\" src={\"https://blog.nexxera.com/wp-content/uploads/2015/09/ThinkstockPhotos-477498910.png\"} /></a>\n                    <a href=\"\"><span class=\"white-text name\">Orgafin</span></a>\n                    <a href=\"\"><span class=\"white-text email\">Orgafin@gmail.com</span></a>\n                </div>\n            </li>\n            <div class=\"login forms\">\n                <div class=\"row\">\n                    <div class=\"col s12 m12 l12\">\n                        <div class=\"card hoverable\" >\n                        <div class=\"center card-content logo\">\n                                <img src={\"https://blog.nexxera.com/wp-content/uploads/2015/09/ThinkstockPhotos-477498910.png\"} width=\"200px\" />\n                            </div>\n                            <div class=\"center\">\n                                <pre>Digite o email e senha.</pre>\n                            </div>\n                            <div class=\"card-content lighten-4 row\">\n                                <div class=\"input-field col s12\">\n                                    <input\n                                        class=\"input-group form-control\"\n                                        placeholder=\"email@email.com\"\n                                        type=\"email\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                    <label class=\"active\" for=\"last_name\">Email</label>\n                                </div>\n\n                                <div class=\"input-field password col s12\">\n\n\n                                    <input\n                                        class=\"input-group form-control\"\n                                        type=\"password\"\n                                        placeholder=\"\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                        onKeyPress={event => {\n                                            if (event.key === 'Enter') {\n                                                create_account()\n                                            }\n                                        }}\n                                    />\n                                    <label class=\"active\" for=\"last_name\">Senha</label>\n\n                                </div>\n                            </div>\n                            <div class=\"card-action\">\n                                <a class=\"color_secundaria\" onClick={() => create_account()} > Cadastre-se </a>\n                            </div>\n                        </div>\n                        <div class=\"col s1 m3 l3\"></div>\n\n                    </div>\n                </div>\n            </div>\n\n\n        </ul>\n    </>\n    )\n}\nexport default SidenavLogin;","C:\\xampp\\htdocs\\orgafin-master2\\src\\index.js",[],"C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\Categorias.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"\nimport React, { Component } from 'react'\nimport NavBar from '../Components/Navbar'\nimport Sidenav from '../Components/SIde_NavBar'\nimport M from \"materialize-css\";\nimport { get_data, close_modal, Moeda,isEmpty, open_modal,  convert_data } from '../tools/functions'\n\nimport src from './configFetch/index.js';\n\nclass Categoria extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item_update : {},\n            item_create : {},\n            items:{}\n        }\n    }\n\n\n   async componentDidMount(){\n        document.addEventListener('DOMContentLoaded', function() {\n            var elems = document.querySelectorAll('.sidenav');\n            M.Sidenav.init(elems, {});\n          });\n\n          document.addEventListener('DOMContentLoaded', function() {\n            var select = document.querySelectorAll('select');\n            M.FormSelect.init(select, {});\n          });\n          document.addEventListener('DOMContentLoaded', function() {\n            var elems_modal = document.querySelectorAll('.modal');\n            M.Modal.init(elems_modal, {});\n          });\n    }\n\n    async mostrarCategorias() {\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ \"iduser\": localStorage.getItem(\"id\") })\n        }\n        fetch(src+'/categorias/mostrar/', requestOptions)\n            .then(response => response.json())\n            .then(data=> {\n                if(data.status !=\"erro\"){\n                    this.items =  data.dados;\n                    return this.setState({ lista_ordens: data.dados })\n                }\n\n            }).catch(\n            err=> {\n              M.toast({html: err});\n              console.log(err);\n            }\n            )\n\n    }\n\n\n\n    salve_update(id_item){\n        const { item_update } = this.state;\n        if(isEmpty(item_update)) return M.toast({ html: \"Preencha os campos\"})\n        if(isEmpty(item_update.tipo)) return M.toast({ html: \"Selecione o tipo\"})\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\"id\": id_item, \"iduser\": localStorage.getItem(\"id\"), \"tipo\": item_update.tipo ,\"nome\": item_update.nome})\n        }\n        fetch(src+'/categorias/editar/', requestOptions)\n            .then(response => response.json())\n            .then(data=> {\n                M.toast({ html: data.dados})\n                close_modal('modal1', this)\n                this.mostrarCategorias()\n\n            }).catch(\n            err=> {\n              M.toast({html: err});\n              console.log(err);\n            }\n            )\n        close_modal('modal1', this)\n        this.mostrarCategorias();\n        this.mostrarCategorias();\n    }\n    excluir_categoria(id_item){\n        const { item_update } = this.state\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\"id\": id_item, \"iduser\": localStorage.getItem(\"id\")})\n        }\n        fetch(src+'/categorias/excluir/', requestOptions)\n            .then(response => response.json())\n            .then(data=> {\n                M.toast({ html: data.dados})\n                close_modal('modal1', this)\n                this.mostrarCategorias()\n\n            }).catch(\n            err=> {\n              M.toast({html: \"um erro ocorru :( \"});\n              console.log(err);\n            }\n            )\n            close_modal('modal1', this)\n            this.mostrarCategorias()\n    }    \n    modal() {\n        const { item_update } = this.state\n        var item = item_update\n        return (\n            <div id=\"modal1\" class=\"modal white\">\n                <div class=\"modal-content card\">\n                <div class=\"card-content\">\n                <span class=\"card-title center\">{item_update.nome ? item_update.nome.toUpperCase() : \"\"}</span>\n                    <div class=\"row\">\n                        <div class=\"col s12 l12\">\n\n                            <div class=\"input-field password col s12 m6\">\n                                <input\n                                    class=\"input-group form-control\"\n                                    type=\"text\"\n                                    placeholder=\"Ex: livro\"\n                                    value={item_update.nome? item_update.nome : \"\"}\n                                    onChange={e => {\n                                        item.nome = e.target.value;\n                                        this.setState({ item_update: item })\n                                    }}\n                                />\n                                <label class=\"active\" for=\"last_name\">Nome</label>\n\n                            </div>\n                            <div class=\"col s12 m6\">\n                                <label>Selecione o tipo</label>\n                                <div class=\"row\">\n                                    <label class=\"col s6\">\n                                        <input\n                                            checked={item.tipo == \"entrada\" ? true : false}\n                                            type=\"radio\"\n                                            onChange={e => {\n                                                item.tipo = 'entrada';\n                                                this.setState({ item_update: item })\n                                            }}\n                                        />\n                                        <span>Entrada</span>\n                                    </label>\n                                    <label class=\"col s6\">\n                                        <input \n                                          checked={item.tipo == \"saida\" ? true : false}\n                                          type=\"radio\"\n                                          onChange={e => {\n                                              item.tipo = 'saida';\n                                              this.setState({ item_update: item })\n                                          }}\n                                        />\n                                        <span>Saída</span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                </div>\n                <div class=\"modal-footer white\">\n                    <a style={{cursor:\"pointer\"}} onClick={()=> this.salve_update(item.id)} class=\"waves-effect waves-green btn-flat white-text green\">Salvar</a>\n                    <a style={{cursor:\"pointer\"}} onClick={()=> close_modal('modal1', this)} class=\"left waves-effect btn-flat white-text red\">Descartar</a>\n                </div>\n            </div>\n        )\n    }\n\n\n     create_categoria(){\n        const { item_create } = this.state;\n        if(isEmpty(item_create)) return M.toast({ html: \"Preencha os campos\"})\n        if(isEmpty(item_create.tipo)) return M.toast({ html: \"Selecione o tipo\"})\n\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ \"nomeMov\": item_create.nome, \"tipo\":item_create.tipo,\"iduser\": localStorage.getItem(\"id\") })\n        }\n        fetch(src+'/categorias/cadastrar/', requestOptions)\n            .then(response => response.json())\n            .then(data=> {\n                console.log(data);\n                M.toast({ html: data.dados})\n                console.log(data.dados);\n                this.mostrarCategorias()\n\n            }).catch(\n            err=> {\n              M.toast({html: err});\n              console.log(err);\n            }\n            )\n      \n    }\n\n\n\n     forms() {\n        const { item_create } = this.state\n        var item = item_create\n        return (\n            <div class=\"card hoverable\" >\n                <div class=\"card-content\">\n                    <div class=\"row\">\n                        <div class=\"col s12 l12\">\n\n                            <div class=\"input-field password col s12 m6\">\n                                <input\n                                    class=\"input-group form-control\"\n                                    type=\"text\"\n                                    placeholder=\"Ex: livro\"\n                                    value={item_create.nome? item_create.nome : \"\"}\n                                    onChange={e => {\n                                        item.nome = e.target.value;\n                                        this.setState({ item_create: item })\n                                    }}\n                                />\n                                <label class=\"active\" for=\"last_name\">Nome</label>\n\n                            </div>\n                            <div class=\"col s12 m6\">\n                                <label>Selecione o tipo</label>\n                                <div class=\"row\">\n                                    <label class=\"col s6\">\n                                        <input\n                                            checked={item.tipo == \"entrada\" ? true : false}\n                                            type=\"radio\"\n                                            onChange={e => {\n                                                item.tipo = 'entrada';\n                                                this.setState({ item_create: item })\n                                            }}\n                                        />\n                                        <span>Entrada</span>\n                                    </label>\n                                    <label class=\"col s6\">\n                                        <input \n                                          checked={item.tipo == \"saida\" ? true : false}\n                                          type=\"radio\"\n                                          onChange={e => {\n                                              item.tipo = 'saida';\n                                              this.setState({ item_create: item })\n                                          }}\n                                        />\n                                        <span>Saída</span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\" card-action center\">\n                    <a onClick={()=> this.create_categoria()}>Cadastrar</a>\n                </div>\n            </div>\n        )\n    }\n\ncard(){\nif(this.items){\n    return(\n        <div>\n            {\n               \n               this.items.map((item, id) =>{\n                return (\n                    <div key={id} onClick={() => {\n                        this.setState({ item_update: item })\n                        open_modal('modal1')}} class=\"card white darken-1 hoverable\">\n                    <div class=\"card-content black-text \">\n                        <span class=\"card-title\">{item.nome ? item.nome : \"Sem nome\"}</span>\n                        <div class=\"divider\" />\n                        <div class=\"row\">\n                            <div class=\"col s6\">Tipo</div>\n                            <div class=\"col s6\">Categoria</div>\n                        </div>\n                        <div class=\"row\">\n                        <div class=\"col s6\">{item.nome ? item.nome : \"TIpo não definido\"}</div>\n                            <div class=\"col s6\">{item.tipo ? item.tipo : \"TIpo não definido\"}</div>\n                        </div>\n                    </div>\n                    <div class=\"card-action\">\n                        <a href=\"#\" onClick={()=> {this.excluir_categoria(item.id)}} class=\"red-text\" >Deletar</a>\n                        <a href=\"#\" class=\"blue-text\">Editar</a>\n                    </div>\n                </div>\n                )\n               })\n            }\n        </div>\n    );\n}else{\n    this.mostrarCategorias();\n}\n\n}\n\n\n    render(){\n\n\n    return (\n        <>\n            <NavBar />\n            <Sidenav />\n            <div class=\"login forms\">\n                <div class=\"row\">\n                    <div class=\"col s12 m3 l3\" />\n                    <div class=\"col s12 m6\">\n                        {this.forms()}\n                        {this.card()}\n                        {this.modal()}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n    }\n\n}\n\n\nexport default Categoria;","C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\Home.js",["107","108","109","110","111","112","113","114","115","116","117","118"],"\n\nimport React, { Component } from 'react';\nimport M from \"materialize-css\";\nimport { Chart } from 'chart.js';\nimport { get_data, close_modal, Moeda, isEmpty, open_modal, convert_data } from '../tools/functions'\nimport NavBar from '../Components/Navbar'\nimport Sidenav from '../Components/SIde_NavBar'\nimport src from './configFetch/index.js';\n\n\nclass Painel extends Component {\n\n     \n    constructor(props) {\n        super(props);\n        this.state = {\n            items:{},\n            categorias:{},\n            movimentacoes: []\n\n        };\n\n    }\n    async mostrarMovimentacao() {\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ \"iduser\": localStorage.getItem(\"id\") })\n        }\n        fetch(src+'/movimentacoes/mostrar/', requestOptions)\n            .then(response => response.json())\n            .then(data=> {\n               \n                if(data.status != \"erro\"){\n                    this.items =  data.dados;\n                    return this.setState({ lista_ordens: data.dados })\n                }\n            }).catch(\n            err=> {\n              console.log(err);\n            }\n            )\n    }\n    async mostrarCategorias() {\n        \n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\"iduser\":  localStorage.getItem(\"id\")})\n        }\n        fetch(src+'/categorias/mostrar/', requestOptions)\n            .then(response => response.json())\n            .then(data=> {\n            if(data.status != \"erro\"){\n                this.categorias =  data.dados;\n                return this.setState({ lista_ordens: data.dados })\n            }\n               \n\n            }).catch(\n            err=> {\n              M.toast({html: err});\n              console.log(err);\n            }\n            )\n\n    }\n    async movimentacoes() {\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({ \"iduser\": localStorage.getItem(\"id\") })\n        }\n        fetch(src+'/movimentacoes/mostrar/', requestOptions)\n            .then(response => response.json())\n            .then(data=> {\n                if(data.status != \"erro\"){\n                    this.setState({ movimentacoes: data.dados })\n                    return this.rotina_grafico(data.dados)\n                }\n            }).catch(\n            err=> {\n              M.toast({html: \"um erro ocorreu: \"+err});\n              console.log(err);\n            }\n            )\n    }\n\n    componentDidMount() {\n        this.movimentacoes()\n        this.mostrarMovimentacao()\n        this.mostrarCategorias()\n\n    }\n\n\n\n    rotina_grafico(itens) {\n        let labels = []\n        let labels_value = []\n        let datas=[]\n        let valores=[]\n        let total = 0\n        \n            itens.map(item => {\n                    labels.push(convert_data(item.data))  \n                    labels_value.push(item.valor ? Number(item.valor) : 0.00)\n                    datas = labels.filter(function(este, i) {\n                        return labels.indexOf(este) === i;\n            })\n            labels_value.map(item=>{\n                if(labels_value.indexOf(item) >= datas.length){\n                    valores.push(labels_value[labels_value.indexOf(item)] + labels_value[labels_value.indexOf(item)-1])\n                    labels_value.pop();\n                     labels_value.pop();\n                     labels_value.push(valores[0]);\n                } \n            })\n            \n            })\n               \n            \n          \n\n\n           \n       \n            \n        var ctx = document.getElementById('myChart');\n        var myChart = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: datas,//['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n                datasets: [{\n                    label: 'Movimentações',\n                    data: labels_value,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)'\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                }\n            }\n        });\n\n    }\n\n    cardInformationNumber(item) {\n        return (\n            <>\n\n                <div class=\"col s12 m3\">\n                    <div class=\"painel card horizontal hoverable\">\n\n                        <div class=\"icon\">\n                            <i class=\"medium material-icons\">assignment</i>\n                        </div>\n                        <div>\n\n                            <span> {item.nome ? item.nome : \"Sem nome\"}</span>\n                            <p>{item.tipo ? item.tipo : \"Tipo não informado\"}</p>\n\n                        </div>\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n    cardChart() {\n\n\n        return (\n            <>\n                <div class=\"col s12 m12\">\n                    <div class=\"card darken-1\">\n                        <div class=\"card-content \">\n\n\n                            <canvas id=\"myChart\"></canvas>\n\n                        </div>\n\n                    </div>\n                </div>\n            </>\n        )\n\n    }\n\n    cardTable() {\n        return (\n            <>\n                <span class=\"card-title\">Plantios</span>\n\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Cultura</th>\n                            <th>Data semeadura</th>\n                            <th>Data colheita</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <td>COENTRO</td>\n                            <td>01/10/2020</td>\n                            <td>30/11/2020</td>\n                        </tr>\n                        <tr>\n                            <td>ALFACE</td>\n                            <td>01/10/2020</td>\n                            <td>15/11/2020</td>\n                        </tr>\n                        <tr>\n                            <td>BETERRABA</td>\n                            <td>01/10/2020</td>\n                            <td>30/01/2021</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </>\n        )\n    }\n\n    paineis() {\n        return (\n            <>\n\n                \n                <div class=\"row\"> {this.cardChart()}</div>\n\n            </>\n        )\n    }\n\n    render() {\n\n        return (\n            <>\n                <NavBar />\n                <Sidenav />\n                <div class=\"login forms\">\n                    <div class=\"row\">\n                        <div class=\"col s12 m3 l3\" />\n                        <div class=\"col s12 m6\">\n                            {this.paineis()}\n                        </div>\n                    </div>\n                </div>\n\n            </>)\n\n    }\n\n\n}\nexport default Painel;","C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\Login.js",["119","120","121","122","123","124","125"],"import React, {useEffect, useState} from 'react'\nimport NavBar from '../Components/Navbar'\nimport M from \"materialize-css\";\nimport { useHistory } from \"react-router-dom\";\nimport SidenavLogin from '../Components/Side_NavBar_Login';\nimport { update_data } from '../tools/functions'\nimport src from './configFetch/index.js';\n\n\nfunction Login(){\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const history = useHistory();\n\n  useEffect(() => {\n    var elems = document.querySelectorAll('.sidenav');\n    M.Sidenav.init(elems, {});\n})\nasync function saveIDlocal(){\n\n       const requestOptions = {\n           method: 'POST',\n           body: JSON.stringify({ \"email\": email, \"senha\":password })\n       }\n       fetch(src+'/usuarios/getId/', requestOptions)\n           .then(response => response.json())\n           .then(data=> {\n            localStorage.setItem('id',data.dados[0].id);\n           }).catch(\n           err=> {\n             M.toast({html: \"E-mail e senha errados\"});\n             console.log(err);\n           }\n           )\n   }\n\nasync function login(){\n  if(email == \"\") return M.toast({html: 'Preencha o email'})\n  if(password == \"\") return M.toast({html: 'Preencha a senha'})\n  localStorage.setItem('email', email)\n  var myHeaders = new Headers();\n  const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({ \"email\": email, \"senha\":password })\n  }\n  fetch(src+'/usuarios/logar/', requestOptions)\n      .then(response => response.json())\n      .then(data=> {\n        M.toast({html: data.dados});\n        if(data.dados == \"Logado com sucesso\"){\n            console.log(data.dados)\n            saveIDlocal();\n            return history.push({\n                pathname:\"/home\",\n                state: { \n                    email: email,\n                    senha: password\n             }\n        });\n        }\n      }).catch(\n      err=> {\n        M.toast({html: \"E-mail e senha errados\"});\n        console.log(err);\n      }\n      )\n\n  //return history.push(\"/home\")\n}\n\n  return(\n    <>\n  <NavBar/>\n  <SidenavLogin/>\n \n  <div class=\"login forms\">\n                <div class=\"row\">\n                <div class=\"col s12 m3 l3\"/>\n                    <div class=\"col s12 m6 l6\">\n                        <div class=\"card hoverable\" >\n\n                        <div class=\"center card-content logo\">\n                                <img src={\"https://blog.nexxera.com/wp-content/uploads/2015/09/ThinkstockPhotos-477498910.png\"} width=\"200px\" />\n                            </div>\n                            <div class=\"center\">\n                                <pre>Logar</pre>\n                            </div>\n                            <div class=\"card-content lighten-4 row\">\n                            <div class=\"input-field col s12\">\n                                    <input\n                                        class=\"input-group form-control\"\n                                        placeholder=\"email@email.com\"\n                                        type=\"email\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                        onKeyPress={event => {\n                                          if (event.key === 'Enter') {\n                                              login()\n                                          }\n                                      }}\n                                    />\n                                    <label class=\"active\" for=\"last_name\">Email</label>\n                                </div>\n\n                                <div class=\"input-field password col s12\">\n\n\n                                    <input\n                                        class=\"input-group form-control\"\n                                        type=\"password\"\n                                        placeholder=\"\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                        onKeyPress={event => {\n                                            if (event.key === 'Enter') {\n                                                login()\n                                            }\n                                        }}\n                                    />\n                                    <label class=\"active\" for=\"last_name\">Senha</label>\n\n                                </div>\n                            </div>\n                            <div class=\"card-action center\">\n                                <a class=\"center\" onClick={() =>  login()} > Entrar </a>\n                            </div>\n                        </div>\n                        <div class=\"col s1 m3 l3\"></div>\n\n                    </div>\n                </div>\n            </div>\n    </>\n\n  )\n}\nexport default Login;","C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\Movimentacao.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"C:\\xampp\\htdocs\\orgafin-master2\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\orgafin-master2\\src\\routes.js",[],"C:\\xampp\\htdocs\\orgafin-master2\\src\\setupTests.js",[],"C:\\xampp\\htdocs\\orgafin-master2\\src\\tools\\functions.js",[],"C:\\xampp\\htdocs\\orgafin-master2\\src\\pages\\configFetch\\index.js",[],{"ruleId":"140","severity":1,"message":"141","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"144","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":9},{"ruleId":"145","severity":1,"message":"146","line":17,"column":25,"nodeType":"147","endLine":17,"endColumn":85},{"ruleId":"145","severity":1,"message":"148","line":18,"column":29,"nodeType":"147","endLine":18,"endColumn":114},{"ruleId":"145","severity":1,"message":"146","line":21,"column":25,"nodeType":"147","endLine":21,"endColumn":37},{"ruleId":"149","severity":1,"message":"150","line":21,"column":37,"nodeType":"147","endLine":21,"endColumn":150},{"ruleId":"145","severity":1,"message":"146","line":22,"column":25,"nodeType":"147","endLine":22,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":23,"column":25,"nodeType":"147","endLine":23,"endColumn":36},{"ruleId":"145","severity":1,"message":"148","line":27,"column":21,"nodeType":"147","endLine":27,"endColumn":63},{"ruleId":"145","severity":1,"message":"148","line":29,"column":21,"nodeType":"147","endLine":29,"endColumn":72},{"ruleId":"145","severity":1,"message":"148","line":30,"column":21,"nodeType":"147","endLine":30,"endColumn":70},{"ruleId":"145","severity":1,"message":"148","line":33,"column":21,"nodeType":"147","endLine":33,"endColumn":92},{"ruleId":"140","severity":1,"message":"151","line":8,"column":11,"nodeType":"142","messageId":"143","endLine":8,"endColumn":18},{"ruleId":"152","severity":1,"message":"153","line":17,"column":18,"nodeType":"154","messageId":"155","endLine":17,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":18,"column":21,"nodeType":"154","messageId":"155","endLine":18,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":43,"column":21,"nodeType":"147","endLine":43,"endColumn":33},{"ruleId":"149","severity":1,"message":"150","line":43,"column":33,"nodeType":"147","endLine":43,"endColumn":146},{"ruleId":"145","severity":1,"message":"146","line":44,"column":21,"nodeType":"147","endLine":44,"endColumn":32},{"ruleId":"145","severity":1,"message":"146","line":45,"column":21,"nodeType":"147","endLine":45,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":53,"column":33,"nodeType":"147","endLine":53,"endColumn":145},{"ruleId":"145","severity":1,"message":"148","line":90,"column":33,"nodeType":"147","endLine":90,"endColumn":95},{"ruleId":"140","severity":1,"message":"156","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":18},{"ruleId":"140","severity":1,"message":"157","line":6,"column":33,"nodeType":"142","messageId":"143","endLine":6,"endColumn":38},{"ruleId":"140","severity":1,"message":"158","line":6,"column":61,"nodeType":"142","messageId":"143","endLine":6,"endColumn":73},{"ruleId":"152","severity":1,"message":"159","line":45,"column":32,"nodeType":"154","messageId":"155","endLine":45,"endColumn":34},{"ruleId":"140","severity":1,"message":"160","line":88,"column":17,"nodeType":"142","messageId":"143","endLine":88,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":139,"column":64,"nodeType":"154","messageId":"155","endLine":139,"endColumn":66},{"ruleId":"152","severity":1,"message":"153","line":150,"column":62,"nodeType":"154","messageId":"155","endLine":150,"endColumn":64},{"ruleId":"145","severity":1,"message":"148","line":166,"column":21,"nodeType":"147","endLine":166,"endColumn":152},{"ruleId":"145","severity":1,"message":"148","line":167,"column":21,"nodeType":"147","endLine":167,"endColumn":144},{"ruleId":"152","severity":1,"message":"153","line":230,"column":64,"nodeType":"154","messageId":"155","endLine":230,"endColumn":66},{"ruleId":"152","severity":1,"message":"153","line":241,"column":62,"nodeType":"154","messageId":"155","endLine":241,"endColumn":64},{"ruleId":"145","severity":1,"message":"148","line":256,"column":21,"nodeType":"147","endLine":256,"endColumn":63},{"ruleId":"145","severity":1,"message":"146","line":286,"column":25,"nodeType":"147","endLine":286,"endColumn":104},{"ruleId":"145","severity":1,"message":"146","line":287,"column":25,"nodeType":"147","endLine":287,"endColumn":55},{"ruleId":"140","severity":1,"message":"156","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":18},{"ruleId":"140","severity":1,"message":"161","line":6,"column":20,"nodeType":"142","messageId":"143","endLine":6,"endColumn":31},{"ruleId":"140","severity":1,"message":"157","line":6,"column":33,"nodeType":"142","messageId":"143","endLine":6,"endColumn":38},{"ruleId":"140","severity":1,"message":"162","line":6,"column":40,"nodeType":"142","messageId":"143","endLine":6,"endColumn":47},{"ruleId":"140","severity":1,"message":"163","line":6,"column":49,"nodeType":"142","messageId":"143","endLine":6,"endColumn":59},{"ruleId":"152","severity":1,"message":"159","line":34,"column":32,"nodeType":"154","messageId":"155","endLine":34,"endColumn":34},{"ruleId":"152","severity":1,"message":"159","line":53,"column":28,"nodeType":"154","messageId":"155","endLine":53,"endColumn":30},{"ruleId":"152","severity":1,"message":"159","line":75,"column":32,"nodeType":"154","messageId":"155","endLine":75,"endColumn":34},{"ruleId":"140","severity":1,"message":"164","line":101,"column":13,"nodeType":"142","messageId":"143","endLine":101,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":103,"column":28,"nodeType":"167","messageId":"168","endLine":103,"endColumn":30},{"ruleId":"165","severity":1,"message":"166","line":109,"column":34,"nodeType":"167","messageId":"168","endLine":109,"endColumn":36},{"ruleId":"140","severity":1,"message":"169","line":128,"column":13,"nodeType":"142","messageId":"143","endLine":128,"endColumn":20},{"ruleId":"140","severity":1,"message":"170","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":38,"column":12,"nodeType":"154","messageId":"155","endLine":38,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":39,"column":15,"nodeType":"154","messageId":"155","endLine":39,"endColumn":17},{"ruleId":"140","severity":1,"message":"171","line":41,"column":7,"nodeType":"142","messageId":"143","endLine":41,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":50,"column":23,"nodeType":"154","messageId":"155","endLine":50,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":83,"column":33,"nodeType":"147","endLine":83,"endColumn":145},{"ruleId":"145","severity":1,"message":"148","line":125,"column":33,"nodeType":"147","endLine":125,"endColumn":77},{"ruleId":"140","severity":1,"message":"156","line":6,"column":10,"nodeType":"142","messageId":"143","endLine":6,"endColumn":18},{"ruleId":"140","severity":1,"message":"157","line":6,"column":33,"nodeType":"142","messageId":"143","endLine":6,"endColumn":38},{"ruleId":"140","severity":1,"message":"158","line":6,"column":61,"nodeType":"142","messageId":"143","endLine":6,"endColumn":73},{"ruleId":"140","severity":1,"message":"172","line":7,"column":10,"nodeType":"142","messageId":"143","endLine":7,"endColumn":20},{"ruleId":"152","severity":1,"message":"159","line":62,"column":32,"nodeType":"154","messageId":"155","endLine":62,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":92,"column":39,"nodeType":"154","messageId":"155","endLine":92,"endColumn":41},{"ruleId":"152","severity":1,"message":"159","line":133,"column":28,"nodeType":"154","messageId":"155","endLine":133,"endColumn":30},{"ruleId":"140","severity":1,"message":"160","line":169,"column":17,"nodeType":"142","messageId":"143","endLine":169,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":204,"column":39,"nodeType":"154","messageId":"155","endLine":204,"endColumn":41},{"ruleId":"145","severity":1,"message":"146","line":260,"column":33,"nodeType":"147","endLine":262,"endColumn":57},{"ruleId":"145","severity":1,"message":"146","line":263,"column":33,"nodeType":"147","endLine":263,"endColumn":63},{"ruleId":"145","severity":1,"message":"148","line":340,"column":21,"nodeType":"147","endLine":340,"endColumn":152},{"ruleId":"145","severity":1,"message":"148","line":341,"column":21,"nodeType":"147","endLine":341,"endColumn":144},{"ruleId":"145","severity":1,"message":"148","line":416,"column":21,"nodeType":"147","endLine":416,"endColumn":67},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'M' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'get_data' is defined but never used.","'Moeda' is defined but never used.","'convert_data' is defined but never used.","Expected '!==' and instead saw '!='.","'item_update' is assigned a value but never used.","'close_modal' is defined but never used.","'isEmpty' is defined but never used.","'open_modal' is defined but never used.","'total' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'myChart' is assigned a value but never used.","'update_data' is defined but never used.","'myHeaders' is assigned a value but never used.","'useHistory' is defined but never used."]